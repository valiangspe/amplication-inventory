/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { ItemsCatalogWhereUniqueInput } from "../../itemsCatalog/base/ItemsCatalogWhereUniqueInput";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { EnumTransactionsTypeField } from "./EnumTransactionsTypeField";
import { WarehouseWhereUniqueInput } from "../../warehouse/base/WarehouseWhereUniqueInput";

@InputType()
class TransactionsWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  dateTime?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => ItemsCatalogWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ItemsCatalogWhereUniqueInput)
  @IsOptional()
  @Field(() => ItemsCatalogWhereUniqueInput, {
    nullable: true,
  })
  itemsCatalog?: ItemsCatalogWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  quantity?: IntNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumTransactionsTypeField,
  })
  @IsEnum(EnumTransactionsTypeField)
  @IsOptional()
  @Field(() => EnumTransactionsTypeField, {
    nullable: true,
  })
  typeField?: "Option1";

  @ApiProperty({
    required: false,
    type: () => WarehouseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WarehouseWhereUniqueInput)
  @IsOptional()
  @Field(() => WarehouseWhereUniqueInput, {
    nullable: true,
  })
  warehouse?: WarehouseWhereUniqueInput;
}

export { TransactionsWhereInput as TransactionsWhereInput };
